### first
register replacement for Sym(1)
discarding, already have a replacement for Sym(1)
register replacement for Sym(2)
register replacement for Sym(3)
--- code ---
val x1 = VectorZeros(Const(100))
val x2 = VectorPlus(Sym(1),Sym(1))
val x3 = VectorPlus(Sym(1),Sym(2))
val x4 = println(x3)

### next
install replacement for Sym(1)
install replacement for Sym(2)
toAtom transform Field(Sym(1),length,Int) List(Sym(1)) -> List(Sym(8))
toAtom transform VectorApply(Sym(1),Sym(9)) List(Sym(1), Sym(9)) -> List(Sym(8), Sym(9))
register replacement for Sym(10)
discarding, already have a replacement for Sym(10)
toAtom transform VectorApply(Sym(1),Sym(9)) List(Sym(1), Sym(9)) -> List(Sym(8), Sym(9))
discarding, already have a replacement for Sym(10)
discarding, already have a replacement for Sym(10)
install replacement for Sym(3)
toAtom transform Field(Sym(1),length,Int) List(Sym(1)) -> List(Sym(8))
toAtom transform VectorApply(Sym(1),Sym(14)) List(Sym(1), Sym(14)) -> List(Sym(8), Sym(14))
register replacement for Sym(15)
discarding, already have a replacement for Sym(15)
toAtom transform VectorApply(Sym(2),Sym(14)) List(Sym(2), Sym(14)) -> List(Sym(13), Sym(14))
register replacement for Sym(16)
discarding, already have a replacement for Sym(16)
--- code ---
val x7 = LoopArray(100) { x6 => 
0.0
}
val x8 = Map("data"->x7,"length"->100) //ClassTag(Vector)
val x12 = LoopArray(100) { x9 => 
val x10 = VectorApply(Sym(8),Sym(9))
val x11 = x10+x10
x11
}
val x13 = Map("data"->x12,"length"->100) //ClassTag(Vector)
val x18 = LoopArray(100) { x14 => 
val x15 = VectorApply(Sym(8),Sym(14))
val x16 = VectorApply(Sym(13),Sym(14))
val x17 = x15+x16
x17
}
val x19 = Map("data"->x18,"length"->100) //ClassTag(Vector)
val x20 = println(x19)

### next
install replacement for Sym(10)
toAtom transform ArrayIndex(Sym(7),Sym(9)) List(Sym(7), Sym(9)) -> List(Sym(24), Sym(26))
install replacement for Sym(15)
toAtom transform ArrayIndex(Sym(7),Sym(14)) List(Sym(7), Sym(14)) -> List(Sym(24), Sym(31))
install replacement for Sym(16)
toAtom transform ArrayIndex(Sym(12),Sym(14)) List(Sym(12), Sym(14)) -> List(Sym(29), Sym(31))
--- code ---
val x24 = LoopArray(100) { x23 => 
0.0
}
val x29 = LoopArray(100) { x26 => 
val x27 = x24.apply(x26)
val x28 = x27+x27
x28
}
val x35 = LoopArray(100) { x31 => 
val x32 = x24.apply(x31)
val x33 = x29.apply(x31)
val x34 = x32+x33
x34
}
val x36 = Map("data"->x35,"length"->100) //ClassTag(Vector)
val x37 = println(x36)
